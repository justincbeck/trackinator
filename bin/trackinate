#!/usr/bin/ruby

require 'trackinator'
require 'trollop'
require 'etc'

opts = Trollop::options do
  opt :youtrack_username, "Your YouTrack username", :type => :string, :short => "y"
  opt :youtrack_password, "Your YouTrack password", :type => :string, :short => "p"
  opt :google_username, "Your Google username", :type => :string, :short => "g"
  opt :google_password, "Your Google password", :type => :string, :short => "a"
  opt :host, "YouTrack host", :type => :string, :short => "o"
  opt :port, "YouTrack port", :type => :int, :default => 80, :short => "r"
  opt :path_prefix, "YouTrack path prefix (e.g. '/youtrack/')", :type => :string, :default => "/", :short =>"e"
  opt :create_rc, "Create a .trackinatorrc file in your home dir", :default => false, :short => "c"
  opt :trial_run, "Try it out but don't actually import", :default => false, :short => "t"
end

unless opts[:create_rc]
  if File.exists?("#{Etc.getpwuid.dir}/.trackinatorrc")
    file = File.open("#{Etc.getpwuid.dir}/.trackinatorrc", "r")
    file.each do |line|
      key = /^(.*?)=/.match(line)[1]
      value = /=(.*)$/.match(line)[1]

      encoded_value = key.include?("password") ? Base64.decode64(value).chomp : value.chomp

      opts[key.to_sym] = encoded_value
    end
  end
end

Trollop::die :youtrack_username, "is required" if opts[:youtrack_username].nil?
Trollop::die :youtrack_password, "is required" if opts[:youtrack_password].nil?
Trollop::die :google_username, "is required" if opts[:google_username].nil?
Trollop::die :google_password, "is required" if opts[:google_password].nil?
Trollop::die :host, "is required" if opts[:host].nil?

you_track = Trackinator::YouTrack.new opts
you_track.login(opts[:youtrack_username], opts[:youtrack_password])
google = Trackinator::Google.new(GData::Client::Spreadsheets.new)
google.login(opts)

Trollop::die "Check your YouTrack credentials and try again" unless you_track.is_logged_in?
Trollop::die "Check your Google credentials and try again" unless google.is_logged_in?
Trollop::die "You must supply a Google doc filename to import" if ARGV.empty? && !opts[:create_rc]

if opts[:create_rc]
  trackinator_rc_count = Dir.entries(Etc.getpwuid.dir).collect { |entry| /trackinatorrc/.match(entry) }.compact.length

  if trackinator_rc_count > 0 && File.exist?("#{Etc.getpwuid.dir}/.trackinatorrc")
    File.rename("#{Etc.getpwuid.dir}/.trackinatorrc", "#{Etc.getpwuid.dir}/.trackinatorrc.#{trackinator_rc_count.to_s}")
  end

  file = File.new("#{Etc.getpwuid.dir}/.trackinatorrc", "w")
  opts.keys.each do |key|
    key_string = key.to_s
    if Trackinator::TRACKINATOR_RC.include?(key_string) && !key_string.include?("given")
      value_string = opts[key]

      value = key_string.include?("password") ? Base64.encode64(value_string) : value_string
      file.puts "#{key_string}=#{value}"
    end
  end
end

if ARGV.length == 1
  importer = Trackinator::Importer.new you_track, google
  importer.trial_run = opts[:trial_run]
  issues = importer.import(ARGV[0])

  if issues.length > 0
    issues.each do |issue|
      p issue
    end
  end

  puts "done..."
end