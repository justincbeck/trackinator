#!/usr/bin/ruby

require 'trackinator/importer'
require 'trollop'
require 'etc'

opts = Trollop::options do
  opt :youtrack_username, "Your YouTrack username", :type => :string, :short => "y"
  opt :youtrack_password, "Your YouTrack password", :type => :string, :short => "p"
  opt :google_username, "Your Google username", :type => :string, :short => "g"
  opt :google_password, "Your Google password", :type => :string, :short => "a"
  opt :host, "YouTrack host", :type => :string, :short => "o"
  opt :port, "YouTrack port", :type => :int, :default => 80, :short => "r"
  opt :path_prefix, "YouTrack path prefix (e.g. '/youtrack/')", :type => :string, :default => "/", :short =>"e"
  opt :create_rc, "Create a .trackinatorrc file in your home dir", :default => false, :short => "c"
end

unless opts[:create_rc]
  if File.exists?("#{Etc.getpwuid.dir}/.trackinatorrc")
    file = File.open("#{Etc.getpwuid.dir}/.trackinatorrc", "r")
    file.each do |line|
      key = /^(.*?)=/.match(line)[1]
      value = /=(.*)$/.match(line)[1]

      encoded_value = key.include?("password") ? Base64.decode64(value).chomp : value.chomp
      opts[key.to_sym] = encoded_value
    end
  end
end

Trollop::die :youtrack_username, "is required" if opts[:youtrack_username].nil?
Trollop::die :youtrack_password, "is required" if opts[:youtrack_password].nil?
Trollop::die :google_username, "is required" if opts[:google_username].nil?
Trollop::die :google_password, "is required" if opts[:google_password].nil?
Trollop::die :host, "is required" if opts[:host].nil?

if opts[:create_rc]
  unless File.exists?("#{Etc.getpwuid.dir}/.trackinatorrc")
    file = File.new("#{Etc.getpwuid.dir}/.trackinatorrc", "w")
    opts.keys.each do |key|
      key_string = key.to_s
      unless key_string.include?("given")
        value_string = opts[key]

        value = key_string.include?("password") ? Base64.encode64(value_string) : value_string
        file.puts "#{key_string}=#{value}"
      end
    end
  end
end

importer = Trackinator::Importer.new opts
importer.import ARGV[0]